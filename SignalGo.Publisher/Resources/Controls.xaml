<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" mc:Ignorable="d">
	<Style x:Key="TitleList" TargetType="{x:Type Label}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<TextBlock Text="{TemplateBinding Content}" FlowDirection="RightToLeft" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,15,0" FontFamily="{DynamicResource Title}" FontSize="16"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="White_ListBox" TargetType="{x:Type ListBox}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Border x:Name="Bd">
						<ScrollViewer Focusable="false">
							<ItemsPresenter/>
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ListBoxItem}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Border x:Name="Bd" SnapsToDevicePixels="true" BorderThickness="0,1,0,0" Padding="4,7" BorderBrush="#FFF0F0F0">
						<Border.Background>
							<SolidColorBrush Color="White" Opacity="0"/>
						</Border.Background>
						<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="0.6"/>
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="False"/>
								<Condition Property="IsSelected" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd">
								<Setter.Value>
									<SolidColorBrush Color="White" Opacity="1"/>
								</Setter.Value>
							</Setter>
							<Setter Property="Opacity" TargetName="contentPresenter" Value="1"/>
						</MultiTrigger>
						<Trigger Property="Selector.IsSelected" Value="True">
							<Setter Property="Background" TargetName="Bd">
								<Setter.Value>
									<SolidColorBrush Color="White" Opacity="1"/>
								</Setter.Value>
							</Setter>
							<Setter Property="Opacity" TargetName="contentPresenter" Value="1"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Opacity" TargetName="contentPresenter" Value="1"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ScrollBar}">
		<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<Grid x:Name="GridRoot" HorizontalAlignment="Right" Margin="2" Opacity="0.1">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GridRoot">
											<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GridRoot">
											<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates"/>
						</VisualStateManager.VisualStateGroups>
						<Track Grid.Row="0" x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true" HorizontalAlignment="Right">
							<Track.Thumb>
								<Thumb />
							</Track.Thumb>
						</Track>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Margin" Value="-20,0,0,0"/>
		<Setter Property="Width" Value="10"/>
	</Style>

	<Style x:Key="ToolBar_BT" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<TextBlock x:Name="textBlock" HorizontalAlignment="Center" Height="Auto" TextWrapping="Wrap" Text="{TemplateBinding Content}" VerticalAlignment="Center" Width="Auto" Foreground="#FF666666" Padding="9,0" FontSize="10.667" FontFamily="{DynamicResource Normal}" />
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Foreground" TargetName="textBlock" Value="#FF807E7E"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Foreground" TargetName="textBlock" Value="#FF0E0E0E"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SearchBox" TargetType="{x:Type TextBox}">
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
		<Setter Property="BorderBrush" Value="#FFABAdB3"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Border x:Name="border" SnapsToDevicePixels="True" Width="30" HorizontalAlignment="Left" BorderThickness="0,0,0,1" BorderBrush="#00C1C1C1" Background="#00000000">
						<Grid Height="49">
							<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" FontFamily="{DynamicResource Normal}" Padding="9,5,8,0"/>
							<TextBlock x:Name="textBlock" HorizontalAlignment="Left" TextWrapping="Wrap" Text="s" VerticalAlignment="Top" FontFamily="{DynamicResource Icon}" FontSize="26.667" Foreground="#FF6E6E6E" Margin="6,-4,0,0"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" TargetName="textBlock" Value="#FFB4B4B4"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Visibility" TargetName="textBlock" Value="Collapsed"/>
							<Setter Property="Background" TargetName="border" Value="White"/>
							<Setter Property="BorderBrush" TargetName="border" Value="LightGray"/>
							<Setter Property="Width" TargetName="border" Value="232"/>
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="Background" TargetName="border" Value="White"/>
							<Setter Property="BorderBrush" TargetName="border" Value="#FFC1C1C1"/>
							<Setter Property="Width" TargetName="border" Value="232"/>
							<Setter Property="Visibility" TargetName="textBlock" Value="Collapsed"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type Thumb}">
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border>
						<Grid>
							<Rectangle Fill="#FF232323" Stroke="#FF232323" RadiusX="1" RadiusY="1" Width="4"/>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Width" Value="16"/>
		<Setter Property="Height" Value="16"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
						<Path x:Name="ExpandPath" Data="M5.2939559E-23,1.0658141E-14 L6,3.9999999 5.2939559E-23,7.9999999 5.2939559E-23,1.0658141E-14 z" Fill="#FF707070" Stretch="Fill" Margin="0,-2" RenderTransformOrigin="0.5,0.5">
							<Path.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Path.RenderTransform>
						</Path>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="RenderTransform" TargetName="ExpandPath">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform Angle="90"/>
										<TranslateTransform/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
							<Setter Property="Fill" TargetName="ExpandPath" Value="#FF272727"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True"/>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsChecked" Value="True"/>
							</MultiTrigger.Conditions>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type TreeViewItem}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Padding" Value="1,0,0,0"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="FocusVisualStyle">
			<Setter.Value>
				<Style>
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle/>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="228"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<Border x:Name="border" Grid.ColumnSpan="1" Padding="0,7" Background="White">
							<Grid>
								<ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}" HorizontalAlignment="Left"/>
								<ContentPresenter Grid.Column="0" Margin="17.5,0,0,0" x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Opacity="0.7"/>
							</Grid>
						</Border>
						<ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="1" Grid.Column="0" Grid.Row="1" Opacity="0.6" Margin="-1,0,0,0"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="false">
							<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="IsExpanded" Value="True">
							<Setter Property="Opacity" TargetName="PART_Header" Value="1"/>
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" TargetName="border" Value="#FFA2A2A2"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="IsSelectionActive" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="border" Value="#FFA2A2A2"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel/>
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="Group_TitleBar_BT" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<TextBlock x:Name="textBlock" HorizontalAlignment="Center" Height="Auto" TextWrapping="Wrap" Text="{TemplateBinding Content}" VerticalAlignment="Center" Width="Auto" Foreground="#FF666666" Padding="7,0,7,1.5" FontSize="9.333" FontFamily="C:/Users/Sendous/AppData/Local/Microsoft/VisualStudio/11.0/Blend Preview/FontCache/hs44asau.wrb/WebSymbols-Regular.otf#Web Symbols" />
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Foreground" TargetName="textBlock" Value="#FF807E7E"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Foreground" TargetName="textBlock" Value="#FF0E0E0E"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Padding="{TemplateBinding Padding}">
						<Grid Background="Transparent" SnapsToDevicePixels="False">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="123"/>
							</Grid.ColumnDefinitions>
							<Ellipse x:Name="circle" HorizontalAlignment="Center" Height="19" VerticalAlignment="Center" Width="19" Fill="#FFD4D4D4"/>
							<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="White" StrokeThickness="2" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
								<Path.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform Angle="180"/>
										<TranslateTransform/>
									</TransformGroup>
								</Path.RenderTransform>
							</Path>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Fill" TargetName="circle" Value="#FFAAAAAA"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="RenderTransform" TargetName="arrow">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform Angle="0"/>
										<TranslateTransform/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
							<Setter Property="Fill" TargetName="circle" Value="#FF555555"/>
							<Setter Property="Stroke" TargetName="arrow" Value="#FFA6A6A6"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type Expander}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Expander}">
					<Border x:Name="border" SnapsToDevicePixels="true" Background="#00232323">
						<DockPanel>
							<ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" DockPanel.Dock="Top" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
								<ToggleButton.Style>
									<Style TargetType="{x:Type ToggleButton}">
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type ToggleButton}">
													<Border Padding="3">
														<Grid SnapsToDevicePixels="False">
															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="19"/>
																<ColumnDefinition Width="*"/>
															</Grid.ColumnDefinitions>
															<Ellipse x:Name="circle" Fill="#FFCFCFCF" HorizontalAlignment="Center" Height="19" VerticalAlignment="Center" Width="19"/>
															<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" StrokeThickness="2" VerticalAlignment="Center" Stroke="#FF6E6E6E"/>
														</Grid>
													</Border>
													<ControlTemplate.Triggers>
														<Trigger Property="IsChecked" Value="true">
															<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
														</Trigger>
														<Trigger Property="IsEnabled" Value="false">
															<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
															<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
															<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</ToggleButton.Style>
								<ToggleButton.FocusVisualStyle>
									<Style>
										<Setter Property="Control.Template">
											<Setter.Value>
												<ControlTemplate>
													<Border>
														<Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
													</Border>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</ToggleButton.FocusVisualStyle>
							</ToggleButton>
							<ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</DockPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="true">
							<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
							<Setter Property="Background" TargetName="border" Value="#FF404040"/>
							<Setter Property="Opacity" TargetName="HeaderSite" Value="1"/>
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Up">
							<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
							<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
							<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True" SourceName="HeaderSite">
							<Setter Property="Opacity" TargetName="HeaderSite" Value="1"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="Label_Selection_Item" TargetType="{x:Type Label}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Padding" Value="5"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Border SnapsToDevicePixels="true" Background="#FF2E2E2E" CornerRadius="13" Margin="3,5,3,3">
						<TextBlock TextWrapping="Wrap" Text="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center" Padding="8,3,8,5" Foreground="#FFCFCFCF"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

<!-- Resource dictionary entries should be defined here. -->
</ResourceDictionary>