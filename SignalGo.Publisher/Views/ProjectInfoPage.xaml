<Page x:Class="SignalGo.Publisher.Views.ProjectInfoPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:SignalGo.Publisher.Views"
      xmlns:vm="clr-namespace:SignalGo.Publisher.ViewModels"
      xmlns:models="clr-namespace:SignalGo.Publisher.Models;assembly=SignalGo.Publisher"
      xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
      xmlns:tg="clr-namespace:MvvmGo.Triggers;assembly=MvvmGo.WindowsWPF"
      mc:Ignorable="d"
      d:DesignHeight="450" d:DesignWidth="800"
      Title="ProjectInfoPage" Background="White">


    <Page.Resources>
        <vm:ProjectInfoViewModel x:Key="ProjectInfoViewModel"/>

        <Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <!--#region custome controls and listbox styles -->
        <Style x:Key="White_ListBox" TargetType="{x:Type ListBox}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd">
                            <ScrollViewer Focusable="false">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="CheckBox" x:Key="CircleCheckbox">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Content" Value=""></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="24"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="24"></ColumnDefinition>
                                <ColumnDefinition ></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="chkBorder" Background="White" BorderBrush="#C6C6C6" BorderThickness="1" CornerRadius="10" Width="20" Height="20" VerticalAlignment="Center"  >
                                <Grid>
                                    <Ellipse x:Name="outerEllipse" Grid.Column="0" Fill="White" Margin="2">
                                    </Ellipse>
                                </Grid>
                            </Border>
                            <ContentPresenter Grid.Column="1" x:Name="content" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="outerEllipse" Property="Fill" Value="Green"/>
                                <Setter Property="Foreground" Value="Blue"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter TargetName="chkBorder" Property="Background" Value="#C6C6C6" />-->
                                <Setter TargetName="chkBorder" Property="BorderBrush" Value="#454545" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Red"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="outerEllipse" Property="Fill" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="outerEllipse" Property="Fill" Value="Red"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" SnapsToDevicePixels="true" BorderThickness="0,1,0,0" Padding="4,7" BorderBrush="#FFF0F0F0">
                            <Border.Background>
                                <SolidColorBrush Color="White" Opacity="0"/>
                            </Border.Background>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd">
                                    <Setter.Value>
                                        <SolidColorBrush Color="White" Opacity="1"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="1"/>
                            </MultiTrigger>
                            <Trigger Property="Selector.IsSelected" Value="True">
                                <Setter Property="Background" TargetName="Bd">
                                    <Setter.Value>
                                        <SolidColorBrush Color="White" Opacity="1"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" HorizontalAlignment="Right" Margin="2" Opacity="0.1">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GridRoot">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GridRoot">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates"/>
                            </VisualStateManager.VisualStateGroups>
                            <Track Grid.Row="0" x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true" HorizontalAlignment="Right">
                                <Track.Thumb>
                                    <Thumb />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="-20,0,0,0"/>
            <Setter Property="Width" Value="10"/>
        </Style>
        <Style TargetType="{x:Type Thumb}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border>
                            <Grid>
                                <Rectangle Fill="#FF232323" Stroke="#FF232323" RadiusX="1" RadiusY="1" Width="4"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <Style TargetType="TextBox">
            <Setter Property="Height" Value="25"/>
            <Setter Property="Margin" Value="10,0,0,0"/>
        </Style>
    </Page.Resources>

    <Page.DataContext>
        <Binding Source="{StaticResource ProjectInfoViewModel}"/>
    </Page.DataContext>

    <TabControl>
        <TabItem Header="☰ Setting" >

            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>

                <!--project guid key-->
                <!--<StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Left">-->
                <Label Grid.Row="0" Content="Guid:" VerticalContentAlignment="Center" HorizontalAlignment="Left"/>
                <TextBox Text="{Binding ProjectInfo.ProjectKey}" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.ColumnSpan="2" Margin="10,0,125,0" />
                <!--</StackPanel>-->
                <!--  -->
                <!--<StackPanel  Orientation="Horizontal" Margin="0,0,0,20" HorizontalAlignment="Left">-->

                <TextBlock Text="Project Folder Path:" Grid.Row="1"/>
                <TextBox Text="{Binding ProjectInfo.ProjectPath}" Grid.Column="1" HorizontalAlignment="Stretch" Grid.Row="1" VerticalAlignment="Stretch" TextWrapping="NoWrap" Margin="10,0,125,0" Grid.ColumnSpan="2"/>

                <TextBlock Text="Project Assemblies Path:" Grid.Row="2"/>
                <TextBox Text="{Binding ProjectInfo.ProjectAssembliesPath}" Grid.Column="1" HorizontalAlignment="Stretch" Grid.Row="2" VerticalAlignment="Stretch" TextWrapping="NoWrap" Grid.ColumnSpan="2" Margin="10,0,125,0"/>

                <!--<Button Command="{Binding BrowsePathCommand}" Content="..." Grid.Column="3" Width="100" Grid.Row="1" FontWeight="Normal" HorizontalAlignment="Right"/>-->
                <Button Command="{Binding BrowsePathCommand}" Content="..." Grid.Column="3" Width="100" Grid.Row="2" FontWeight="Normal" HorizontalAlignment="Right"/>
                <TextBox TextChanged="txtCmdLogs_TextChanged" x:Name="txtCmdLogs" TextWrapping="WrapWithOverflow" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Top" Text="{Binding CmdLogs}" Height="170" Margin="0,5,5,0" ScrollViewer.CanContentScroll="True" VerticalScrollBarVisibility="Auto"/>
                <TextBox x:Name="CmdServerLogs" TextWrapping="WrapWithOverflow" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Text="{Binding ServerLogs}" Height="80" Margin="0,5,5,0" ScrollViewer.CanContentScroll="True" VerticalScrollBarVisibility="Auto"/>

                <ListBox Style="{DynamicResource White_ListBox}" x:Name="lst_CommandsQueue" ItemsSource="{Binding ProjectInfo.Commands}" MinWidth="150" Grid.Column="2" Grid.Row="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,5,0,20" VerticalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <ListBox.ItemTemplate>
                        <HierarchicalDataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="150"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <StackPanel>
                                    <TextBlock Text="{Binding Name}">
                                    </TextBlock>
                                    <TextBlock Foreground="Green">
                                        <Run Text="⌛"/>
                                        <Run Text="{Binding Status}"/>
                                    </TextBlock>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Grid.Column="1">
                                    <Button FontSize="14" Background="Transparent" HorizontalAlignment="Stretch" Cursor="Hand" Command="{Binding RemoveCommand,Source={StaticResource ProjectInfoViewModel}}" CommandParameter="{Binding}" BorderThickness="0" Content="✘" Padding="5" Foreground="Red"/>
                                    <Button FontSize="14" Background="Transparent" HorizontalAlignment="Stretch" Cursor="Hand" Command="{Binding RetryCommand,Source={StaticResource ProjectInfoViewModel}}" CommandParameter="{Binding}" BorderThickness="0" Content="⟲" Padding="5" Foreground="DodgerBlue"/>
                                    <Button FontSize="14" HorizontalAlignment="Stretch" Cursor="Hand" Command="{Binding ToDownCommand,Source={StaticResource ProjectInfoViewModel}}" CommandParameter="{Binding}" BorderThickness="0" Content="↓" Padding="5" Background="Transparent" Foreground="Green"/>
                                    <Button FontSize="14" HorizontalAlignment="Stretch" Cursor="Hand" Command="{Binding ToUpCommand,Source={StaticResource ProjectInfoViewModel}}" CommandParameter="{Binding}" BorderThickness="0" Content="↑" Padding="5" Background="Transparent" Foreground="Green"/>
                                </StackPanel>
                                <Grid Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalAlignment="Stretch">
                                    <ProgressBar x:Name="taskProgressBar" Initialized="taskProgressBar_Initialized" Maximum="{Binding Size}" Value="{Binding Position}" />
                                    <TextBlock Text="{Binding ElementName=taskProgressBar, Path=Value, StringFormat={}{0:0} KB}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Grid>
                            </Grid>
                        </HierarchicalDataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <!--#region Publish Servers Detail -->
                <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Grid.Column="2" Grid.Row="3" >
                    <Expander ExpandDirection="Up" Cursor="Hand">
                        <ListView HorizontalAlignment="Stretch" ItemsSource="{Binding CurrentServerSettingInfo.ServerInfo}" HorizontalContentAlignment="Stretch">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition />
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <CheckBox Style="{StaticResource CircleCheckbox}" Grid.Column="0"
                                                  Command="{Binding AddToServerQueueCommand}" 
                                                  Content="{Binding ServerName}"
                                                  />

                                        <!--<CheckBox>
                                            <tg:TriggerExtensions.Triggers>
                                                <tg:TriggerCollections>
                                                    -->
                                        <!--Updated-->
                                        <!--
                                                    <tg:DataTriggerInfo>
                                                        <tg:DataTriggerInfo.Conditions>
                                                            <tg:DataConditionInfo Binding="{Binding ServerStatus}" Value="{x:Static models:ServerInfoStatus.Updated}"/>
                                                        </tg:DataTriggerInfo.Conditions>
                                                        <tg:DataTriggerInfo.Setters>
                                                            <tg:SetterInfo  Property="Background" Value="Green"/>
                                                            <tg:SetterInfo  Property="IsChecked" >
                                                                <tg:SetterInfo.Value>
                                                                    <Thickness>0</Thickness>
                                                                </tg:SetterInfo.Value>
                                                            </tg:SetterInfo>
                                                        </tg:DataTriggerInfo.Setters>
                                                    </tg:DataTriggerInfo>
                                                    -->
                                        <!--UpdateError-->
                                        <!--
                                                    <tg:DataTriggerInfo>
                                                        <tg:DataTriggerInfo.Conditions>
                                                            <tg:DataConditionInfo Binding="{Binding ServerStatus}" Value="{x:Static models:ServerInfoStatus.UpdateError}"/>
                                                        </tg:DataTriggerInfo.Conditions>
                                                        <tg:DataTriggerInfo.Setters>
                                                            <tg:SetterInfo  Property="Background" Value="Red"/>
                                                            <tg:SetterInfo  Property="BorderThickness">
                                                                <tg:SetterInfo.Value>
                                                                    <Thickness>1</Thickness>
                                                                </tg:SetterInfo.Value>
                                                            </tg:SetterInfo>
                                                        </tg:DataTriggerInfo.Setters>
                                                    </tg:DataTriggerInfo>
                                                </tg:TriggerCollections>
                                            </tg:TriggerExtensions.Triggers>
                                        </CheckBox>-->

                                        <TextBlock Padding="5" Grid.Column="2" Foreground="Green" Text="{Binding ServerStatus}">
                                        </TextBlock>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Expander>
                    <TextBlock Text="Servers" HorizontalAlignment="Stretch" FontWeight="Bold"/>
                </StackPanel>
                <!--#endregion-->

                <!--#region Commands Trigger -->
                <StackPanel Grid.Row="4" Grid.ColumnSpan="3" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <!--#region Project Status -->
                    <StackPanel Orientation="Horizontal"  HorizontalAlignment="Center">
                        <TextBlock Text="Status: " Margin="10"/>
                        <TextBlock x:Name="cmdStatus" Foreground="Green" Text="{Binding ProjectInfo.Status}" Margin="10">

                        </TextBlock>
                    </StackPanel>
                    <!--#endregion-->

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                        <Button Command="{Binding BuildCommand}" Content="Build ♻" Width="60" Height="30"/>
                        <Button Command="{Binding RunTestsCommand}" Content="Tests ☑" Width="60" Height="30" Margin="10,0,0,0"/>
                        <Button Command="{Binding PublishCommand}" Content="Publish ☢" Width="60" Height="30" Margin="10,0,0,0"/>
                        <Button Command="{Binding RunCommand}" Content="Run Commands ▶" Width="100" Height="30" Margin="10,0,0,0"/>
                    </StackPanel>
                </StackPanel>
                <!--#endregion-->

                <!--#region Project Remove Command -->
                <Button Command="{Binding DeleteCommand}" Grid.Column="2" VerticalAlignment="Bottom" Content="Delete" Width="100" Height="30" Grid.Row="4" HorizontalAlignment="Right"/>
                <!--#endregion-->
            </Grid>
        </TabItem>

        <!--<TabItem Header="Window" Loaded="TabItem_Loaded" >-->
        <!--<TabItem Header="Window" >
            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                -->
        <!--<StackPanel Orientation="Horizontal">
                    <Button Command="{Binding ClearLogCommand}" Content="Clear" Padding="10"/>
                </StackPanel>-->
        <!--
                <ListView Grid.Row="1" ItemsSource="{Binding ProjectInfo.Logs}">
                    <ListView.Resources>
                        <Style TargetType="ListViewItem">
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <MenuItem Header="Copy" Command="{Binding CopyCommand,Source={StaticResource ProjectInfoViewModel}}" CommandParameter="{Binding}"/>
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.Resources>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBlock Text="{Binding Text}" TextWrapping="Wrap"/>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
        </TabItem>-->
    </TabControl>
</Page>
