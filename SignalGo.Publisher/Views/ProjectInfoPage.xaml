<Page x:Class="SignalGo.Publisher.Views.ProjectInfoPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:SignalGo.Publisher.Views"
      xmlns:vm="clr-namespace:SignalGo.Publisher.ViewModels"
      xmlns:models="clr-namespace:SignalGo.Publisher.Models;assembly=SignalGo.Publisher"
      xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
      xmlns:tg="clr-namespace:MvvmGo.Triggers;assembly=MvvmGo.WindowsWPF"
      xmlns:conv="clr-namespace:SignalGo.Publisher.Converters"
      mc:Ignorable="d"
      d:DesignHeight="450" d:DesignWidth="800"
      Title="ProjectInfoPage" Background="White">


    <Page.Resources>
        <conv:DirectoryToFileNameConverter x:Key="DirectoryToFileNameConverter"/>
        <vm:ProjectInfoViewModel x:Key="ProjectInfoViewModel"/>

        <Style TargetType="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <!--#region custome controls and listbox styles -->
        <Style x:Key="White_ListBox" TargetType="{x:Type ListBox}">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <!--<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd">
                            <ScrollViewer Focusable="false">
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>-->
        </Style>
        <Style TargetType="CheckBox" x:Key="CircleCheckbox">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Content" Value=""></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="24"></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="24"></ColumnDefinition>
                                <ColumnDefinition ></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="chkBorder" Background="White" BorderBrush="#C6C6C6" BorderThickness="1" CornerRadius="10" Width="20" Height="20" VerticalAlignment="Center"  >
                                <Grid>
                                    <Ellipse x:Name="outerEllipse" Grid.Column="0" Fill="White" Margin="2">
                                    </Ellipse>
                                </Grid>
                            </Border>
                            <ContentPresenter Grid.Column="1" x:Name="content" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="outerEllipse" Property="Fill" Value="Green"/>
                                <Setter Property="Foreground" Value="Blue"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <!--<Setter TargetName="chkBorder" Property="Background" Value="#C6C6C6" />-->
                                <Setter TargetName="chkBorder" Property="BorderBrush" Value="#454545" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Red"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="outerEllipse" Property="Fill" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="outerEllipse" Property="Fill" Value="Red"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" SnapsToDevicePixels="true" BorderThickness="0,1,0,0" Padding="4,7" BorderBrush="#FFF0F0F0">
                            <Border.Background>
                                <SolidColorBrush Color="White" Opacity="0"/>
                            </Border.Background>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd">
                                    <Setter.Value>
                                        <SolidColorBrush Color="White" Opacity="1"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="1"/>
                            </MultiTrigger>
                            <Trigger Property="Selector.IsSelected" Value="True">
                                <Setter Property="Background" TargetName="Bd">
                                    <Setter.Value>
                                        <SolidColorBrush Color="White" Opacity="1"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" HorizontalAlignment="Right" Margin="2" Opacity="0.1">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GridRoot">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="GridRoot">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates"/>
                            </VisualStateManager.VisualStateGroups>
                            <Track Grid.Row="0" x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true" HorizontalAlignment="Right">
                                <Track.Thumb>
                                    <Thumb />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="-20,0,0,0"/>
            <Setter Property="Width" Value="10"/>
        </Style>
        <Style TargetType="{x:Type Thumb}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border>
                            <Grid>
                                <Rectangle Fill="#FF232323" Stroke="#FF232323" RadiusX="1" RadiusY="1" Width="4"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <Style TargetType="TextBox">
            <Setter Property="Height" Value="25"/>
            <Setter Property="Margin" Value="10,0,0,0"/>
        </Style>
    </Page.Resources>

    <Page.DataContext>
        <Binding Source="{StaticResource ProjectInfoViewModel}"/>
    </Page.DataContext>

    <TabControl>
        <TabItem Header="Commander" >

            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="100"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>

                <TabControl Grid.Row="3" Grid.Column="0" Grid.RowSpan="2" Grid.ColumnSpan="2" >
                    <TabItem>
                        <TabItem.Header>
                            <TextBlock Text="Builder"/>
                        </TabItem.Header>
                        <DockPanel>
                            <!--<Label FontWeight="Bold" Content="Builder Log:" FontSize="10" VerticalAlignment="Top" DockPanel.Dock="Top" HorizontalAlignment="Left" />-->
                            <TextBox BorderThickness="0" TextChanged="txtCmdLogs_TextChanged" x:Name="txtCmdLogs" TextWrapping="WrapWithOverflow" Width="auto" Height="auto" Text="{Binding CmdLogs}" ScrollViewer.CanContentScroll="True" VerticalScrollBarVisibility="Auto" DockPanel.Dock="Bottom" Margin="0,0,0,0"/>
                        </DockPanel>
                    </TabItem>
                    <TabItem Header="ServerLog">
                        <DockPanel>
                            <!--<Label FontWeight="Bold" Content="Builder Log:" FontSize="10" VerticalAlignment="Top" DockPanel.Dock="Top" HorizontalAlignment="Left" />-->
                            <TextBox BorderThickness="0" x:Name="CmdServerLogs" Width="auto" Height="auto" TextWrapping="WrapWithOverflow" Text="{Binding ServerLogs}" ScrollViewer.CanContentScroll="True" VerticalScrollBarVisibility="Auto"  DockPanel.Dock="Bottom" Margin="0,0,0,0"/>
                        </DockPanel>
                    </TabItem>
                    <TabItem Header="Designer">
                        <ListBox BorderThickness="0" ItemsSource="{Binding ProjectInfo.TestCommand.Tests}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding Status}" Padding="5"/>
                                        <TextBlock Grid.Column="1" Text="{Binding Name}" Padding="5"/>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </TabItem>
                </TabControl>

                <ListBox Style="{DynamicResource White_ListBox}" x:Name="lst_Commands" ItemsSource="{Binding CurrentCommandSettingInfo.CommandSettings}" MinWidth="150" Grid.Column="2" Grid.Row="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,5,0,5" VerticalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto" Grid.RowSpan="1">
                    <!--<ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                    <Button Command="{Binding }" FontSize="14" Background="Transparent" HorizontalAlignment="Stretch" Cursor="Hand" BorderThickness="0" Padding="5" >
                                        <TextBlock>
                                        <Run Text="{Binding Command }"/>
                                        <Run Text="{Binding CommandDescription}" FontSize="12"/>
                                        </TextBlock>
                                    </Button>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>-->

                </ListBox>
                <ListBox Style="{DynamicResource White_ListBox}" x:Name="lst_CommandsQueue" ItemsSource="{Binding ProjectInfo.Commands}" MinWidth="150" Grid.Column="2" Grid.Row="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,5,0,50" VerticalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto" Grid.RowSpan="2">
                    <ListBox.ItemTemplate>
                        <HierarchicalDataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="200"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <StackPanel HorizontalAlignment="Stretch">
                                    <TextBlock Text="{Binding Name}">
                                    </TextBlock>
                                    <TextBlock Foreground="Green">
                                        <!--<Run Text="⌛"/>-->
                                        <Run Text="{Binding Status}"/>
                                    </TextBlock>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" Grid.Column="1" HorizontalAlignment="Stretch">
                                    <Button FontSize="14" Background="Transparent" HorizontalAlignment="Stretch" Cursor="Hand" Command="{Binding RemoveCommand,Source={StaticResource ProjectInfoViewModel}}" CommandParameter="{Binding}" BorderThickness="0" Content="✘" Padding="5" Foreground="Red"/>
                                    <Button FontSize="14" Background="Transparent" HorizontalAlignment="Stretch" Cursor="Hand" Command="{Binding RetryCommand,Source={StaticResource ProjectInfoViewModel}}" CommandParameter="{Binding}" BorderThickness="0" Content="⟲" Padding="5" Foreground="DodgerBlue"/>
                                    <Button FontSize="14" HorizontalAlignment="Stretch" Cursor="Hand" Command="{Binding ToDownCommand,Source={StaticResource ProjectInfoViewModel}}" CommandParameter="{Binding}" BorderThickness="0" Content="↓" Padding="5" Background="Transparent" Foreground="Green"/>
                                    <Button FontSize="14" HorizontalAlignment="Stretch" Cursor="Hand" Command="{Binding ToUpCommand,Source={StaticResource ProjectInfoViewModel}}" CommandParameter="{Binding}" BorderThickness="0" Content="↑" Padding="5" Background="Transparent" Foreground="Green"/>
                                </StackPanel>
                                <Grid Grid.Row="1" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalAlignment="Stretch">
                                    <ProgressBar x:Name="taskProgressBar" Maximum="{Binding Size}" Value="{Binding Position}" Foreground="#FF25AE1F" >
                                        <tg:TriggerExtensions.Triggers>
                                            <tg:TriggerCollections>
                                                <tg:DataTriggerInfo Binding="{Binding HasStatusError}" Value="True">
                                                    <tg:DataTriggerInfo.Setters>
                                                        <tg:SetterInfo Property="Foreground" Value="{x:Static Brushes.Red}"/>
                                                    </tg:DataTriggerInfo.Setters>
                                                </tg:DataTriggerInfo>
                                            </tg:TriggerCollections>
                                        </tg:TriggerExtensions.Triggers>
                                    </ProgressBar>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <TextBlock Text="{Binding ElementName=taskProgressBar, Path=Value, StringFormat={}{0:0} (Kb/Count)}" HorizontalAlignment="Center" VerticalAlignment="Center" >
                                        </TextBlock>
                                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" >
                                            <tg:TriggerExtensions.Triggers>
                                                <tg:TriggerCollections>
                                                    <tg:DataTriggerInfo>
                                                        <tg:DataTriggerInfo.Conditions>
                                                            <tg:DataConditionInfo Binding="{Binding IsComplete}" Value="True" />
                                                            <tg:DataConditionInfo Binding="{Binding HasStatusError}" Value="True" />
                                                        </tg:DataTriggerInfo.Conditions>
                                                        <tg:DataTriggerInfo.Setters>
                                                            <tg:SetterInfo Property="Text" Value="☹"/>
                                                        </tg:DataTriggerInfo.Setters>
                                                    </tg:DataTriggerInfo>
                                                     <tg:DataTriggerInfo>
                                                        <tg:DataTriggerInfo.Conditions>
                                                            <tg:DataConditionInfo Binding="{Binding IsComplete}" Value="True" />
                                                            <tg:DataConditionInfo Binding="{Binding HasStatusError}" Value="False" />
                                                        </tg:DataTriggerInfo.Conditions>
                                                        <tg:DataTriggerInfo.Setters>
                                                            <tg:SetterInfo Property="Text" Value="☻"/>
                                                        </tg:DataTriggerInfo.Setters>
                                                    </tg:DataTriggerInfo>
                                                </tg:TriggerCollections>
                                            </tg:TriggerExtensions.Triggers>
                                        </TextBlock>
                                    </StackPanel>

                                </Grid>
                            </Grid>
                        </HierarchicalDataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <!--#region Publish Servers Detail -->
                <StackPanel Margin="5" Orientation="Vertical" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Grid.Column="2" Grid.Row="3" Grid.RowSpan="2" >
                    <Expander ExpandDirection="Up" Cursor="Hand">
                        <ListView HorizontalAlignment="Stretch" ItemsSource="{Binding CurrentServerSettingInfo.ServerInfo}" HorizontalContentAlignment="Stretch">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <!--<CheckBox Style="{StaticResource CircleCheckbox}" Grid.Column="0"  -->
                                        <CheckBox Style="{StaticResource CircleCheckbox}" Grid.Column="0"
                                                  IsChecked="{Binding IsChecked}"
                                                  Content="{Binding ServerName}"
                                                  />
                                        <TextBlock Padding="5" HorizontalAlignment="Center" Grid.Column="1" Foreground="DarkGray" Text="{Binding ServerLastUpdate}">
                                        </TextBlock>
                                        <TextBlock Padding="5" HorizontalAlignment="Right" Grid.Column="2" Foreground="Green" Text="{Binding ServerStatus}">
                                        </TextBlock>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Expander>
                    <TextBlock Text="Servers" HorizontalAlignment="Stretch" FontWeight="Bold"/>
                </StackPanel>
                <!--#endregion-->

                <!--#region Commands Trigger -->
                <StackPanel Grid.Row="5" Grid.ColumnSpan="3" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <!--#region Project Status -->
                    <StackPanel Orientation="Horizontal"  HorizontalAlignment="Center" Margin="10">
                        <TextBlock Text="Last Update: "/>
                        <TextBlock Foreground="Green" Text="{Binding ProjectInfo.LastUpdateDateTime}" />
                    </StackPanel>
                    <!--#endregion-->

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                        <Button Command="{Binding GitPullCommand}" Content="Git Pull" Width="60" Height="30"/>
                        <Button Command="{Binding BuildCommand}" Content="Build ♻" Width="60" Height="30" Margin="10,0,0,0"/>
                        <Button Command="{Binding RunTestsCommand}" Content="Tests ☑" Width="60" Height="30" Margin="10,0,0,0"/>
                        <Button Command="{Binding PublishCommand}" Content="Publish ☢" Width="60" Height="30" Margin="10,0,0,0"/>
                        <Button IsEnabled="{Binding CanRunCommands}" Command="{Binding RunCommand}" Content="Run Commands ▶" Width="auto" Height="30" Margin="10,0,0,0"/>
                        <Button Command="{Binding CancellationCommand}" Content="Cancel Commands ✖" Width="auto" Height="30" Margin="10,0,0,0"/>
                    </StackPanel>
                </StackPanel>
                <!--#endregion-->

                <!--#region Project Remove Command -->
                <Button Command="{Binding DeleteCommand}" Grid.Column="2" VerticalAlignment="Bottom" Content="Delete" Width="100" Height="30" Grid.Row="5" HorizontalAlignment="Right"/>
                <!--#endregion-->
            </Grid>
        </TabItem>

        <TabItem Header="☰ Setting" >
            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>


                <!--project guid key-->
                <!--<StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Left">-->
                <Label Margin="0,5" Grid.Row="0" Content="Guid:" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                <TextBox Text="{Binding ProjectInfo.ProjectKey}" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.ColumnSpan="2" Margin="10,5,125,5" />
                <!--</StackPanel>-->
                <!--  -->
                <!--<StackPanel  Orientation="Horizontal" Margin="0,0,0,20" HorizontalAlignment="Left">-->

                <TextBlock Margin="0,5" Text="Project Folder Path:" Grid.Row="1"/>
                <TextBox Text="{Binding ProjectInfo.ProjectPath}" Grid.Column="1" HorizontalAlignment="Stretch" Grid.Row="1" VerticalAlignment="Stretch" TextWrapping="NoWrap" Margin="10,5,125,5" Grid.ColumnSpan="2"/>

                <TextBlock Margin="0,5" Text="Project Assemblies Path:" Grid.Row="2"/>
                <TextBox Text="{Binding ProjectInfo.ProjectAssembliesPath}" Grid.Column="1" HorizontalAlignment="Stretch" Grid.Row="2" VerticalAlignment="Stretch" TextWrapping="WrapWithOverflow" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto" Grid.ColumnSpan="2" Margin="10,5,125,5"/>
                <Button Margin="0,5" Command="{Binding BrowseAssemblyPathCommand}" Content="..." Grid.Column="3" Width="80" Grid.Row="2" FontWeight="Normal" HorizontalAlignment="Right"/>

                <Button Margin="0,5" Command="{Binding BrowseProjectPathCommand}" Content="..." Grid.Column="3" Width="80" Grid.Row="1" FontWeight="Normal" HorizontalAlignment="Right"/>

                <!--#region FileOptions -->
                <!--server-->
                <DockPanel Grid.Row="3">
                    <TextBlock Margin="0,5" Text="Don't Update this files in Server: " HorizontalAlignment="Stretch" VerticalAlignment="Top" DockPanel.Dock="Left"/>
                    <Button  Grid.Column="0" Content="+" HorizontalAlignment="Stretch"  DockPanel.Dock="Right" Command="{Binding AddIgnoreServerFileCommand}" VerticalAlignment="Stretch" MaxWidth="50" Height="25" Padding="5,5,5,5" />
                </DockPanel>
                <TextBox x:Name="txtIgnoreServerFileName" TextWrapping="Wrap" Grid.Row="4" Grid.Column="0" Text="{Binding IgnoreServerFileName}" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto" HorizontalAlignment="Stretch" Margin="5" DockPanel.Dock="Left" KeyDown="txtIgnoreServerFileName_KeyDown"/>

                <ListView x:Name="lst_ignoredFiles" ItemsSource="{Binding ProjectInfo.ServerIgnoredFiles}" MinWidth="200" MaxWidth="250" VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="5" VerticalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto" MinHeight="25" Grid.Row="5" Grid.RowSpan="2">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Button FontSize="14" Background="Transparent"
                                            Cursor="Hand" Command="{Binding
                                        RemoveIgnoredServerFileCommand,Source={StaticResource
                                        ProjectInfoViewModel}}"
                                            CommandParameter="{Binding }"
                                            BorderThickness="0" Content="✘" Padding="0"
                                            Foreground="Red" Grid.Column="0" HorizontalAlignment="Right" />
                                <CheckBox IsChecked="{Binding IsEnabled}" Content="{Binding FileName}" Grid.Column="1"
                                               Padding="5" HorizontalAlignment="Stretch"/>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>

                </ListView>
                <!--client-->
                <DockPanel Grid.Column="1" Grid.Row="3" HorizontalAlignment="Stretch" >
                    <TextBlock DockPanel.Dock="Left" Margin="10,5" Grid.Column="1" Text="Don't upload this files in Client: " HorizontalAlignment="Stretch" VerticalAlignment="Top"/>
                    <Button DockPanel.Dock="Right" Command="{Binding AddIgnoreClientFileCommand}" Content="Browse" FontWeight="Normal" HorizontalAlignment="Stretch"   Grid.Column="1" VerticalAlignment="Top" Padding="5,5,5,5"/>
                </DockPanel>
                <DockPanel Grid.Row="4" Grid.Column="1" >
                    <Label DockPanel.Dock="Left" Content="Regex: " HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10,5,0,5" />
                    <TextBox DockPanel.Dock="Right" TextWrapping="Wrap" Text="In next release" IsEnabled="False" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto" HorizontalAlignment="Stretch" Margin="5" VerticalAlignment="Stretch"/>
                </DockPanel>

                <ListView Grid.Column="1" Grid.Row="5" Grid.RowSpan="2" x:Name="lst_ignoredClientsFiles" ItemsSource="{Binding ProjectInfo.IgnoredFiles}" MinWidth="200" MaxWidth="250" VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="10,5" VerticalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True" ScrollViewer.VerticalScrollBarVisibility="Auto" MinHeight="25" >
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Button FontSize="14" Background="Transparent"
                                            Cursor="Hand" Command="{Binding
                                        RemoveIgnoredFileCommand,Source={StaticResource
                                        ProjectInfoViewModel}}"
                                            CommandParameter="{Binding }"
                                            BorderThickness="0" Content="✘" Padding="0"
                                            Foreground="Red" Grid.Column="0" HorizontalAlignment="Right" />
                                <CheckBox x:Name="lstitem_ignorefileName"  IsChecked="{Binding IsEnabled}"
                                               Content="{Binding FileName}" Grid.Column="1"
                                               Padding="5" HorizontalAlignment="Stretch"/>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>

                </ListView>


                <Button Margin="5,5" Command="{Binding SaveChangeCommand}" Content="Save" Width="80" Grid.Row="6" FontWeight="Normal" HorizontalAlignment="Right" Grid.Column="3" VerticalAlignment="Bottom"/>
                <!--#endregion-->

            </Grid>

        </TabItem>
        <TabItem Header="File Manager">
            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" >
                    <Button Command="{Binding FetchFilesCommand}" Content="Fetch" Width="100"/>
                    <ComboBox ItemsSource="{Binding Servers}" SelectedItem="{Binding SelectedServerInfo}" DisplayMemberPath="ServerName" Margin="10,0,0,0" Width="200" >
                        <tg:TriggerExtensions.Triggers>
                            <tg:TriggerCollections>
                                <!--نقدی-->
                                <tg:EventTriggerInfo EventName="SelectionChanged" >
                                    <!--<tg:DataTriggerInfo.Conditions>
                                        <tg:DataConditionInfo Binding="{Binding FetchFilesCommand}" Value="{x:Null}" IsInvert="True"/>
                                    </tg:DataTriggerInfo.Conditions>-->
                                    <tg:EventTriggerInfo.Setters>
                                        <tg:EventSetterInfo  EventName="SelectionChanged" Command="{Binding ClearServerFileListCommand,Source={StaticResource ProjectInfoViewModel}}"/>
                                    </tg:EventTriggerInfo.Setters>
                                </tg:EventTriggerInfo>
                            </tg:TriggerCollections>
                        </tg:TriggerExtensions.Triggers>
                    </ComboBox>
                </StackPanel>
                <ListBox Grid.Row="1" BorderThickness="0" ItemsSource="{Binding ProjectInfo.ServerFiles}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="100"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Converter={StaticResource DirectoryToFileNameConverter}}" Padding="5"/>
                                <Button Margin="10,0,10,0" Grid.Column="1" Padding="5" Content="Load" Command="{Binding LoadFileCommmand,Source={StaticResource ProjectInfoViewModel}}" CommandParameter="{Binding}"/>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <Grid Grid.Column="1"  Grid.RowSpan="2">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>
                    <TextBox Text="{Binding FileContent}" AcceptsReturn="True" Height="auto" VerticalScrollBarVisibility="Auto"/>
                    <Button Content="Update" Grid.Row="1" Command="{Binding UploadFileCommmand}" />
                </Grid>
            </Grid>

        </TabItem>
        <!--<TabItem Header="File Options">
            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition  />
                </Grid.ColumnDefinitions>

            </Grid>
        </TabItem>-->


        <!--<TabItem Header="Window" Loaded="TabItem_Loaded" >-->
        <!--<TabItem Header="Window" >
            <Grid Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                -->
        <!--<StackPanel Orientation="Horizontal">
                    <Button Command="{Binding ClearLogCommand}" Content="Clear" Padding="10"/>
                </StackPanel>-->
        <!--
                <ListView Grid.Row="1" ItemsSource="{Binding ProjectInfo.Logs}">
                    <ListView.Resources>
                        <Style TargetType="ListViewItem">
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu>
                                        <MenuItem Header="Copy" Command="{Binding CopyCommand,Source={StaticResource ProjectInfoViewModel}}" CommandParameter="{Binding}"/>
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.Resources>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBlock Text="{Binding Text}" TextWrapping="Wrap"/>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
        </TabItem>-->
    </TabControl>
</Page>
